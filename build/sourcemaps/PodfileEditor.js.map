{"version":3,"sources":["PodfileEditor.js"],"names":[],"mappings":";;;;;;;;;AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,cAAc,CAAC,CAAC;;AAExB,MAAM,kBAAkB,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC3D,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE7B,MAAM,OAAO,GAAG,SAAS,CAAC;AAC1B,MAAM,QAAQ,GAAG,UAAU,CAAC;;IAEtB,aAAa;AAEN,WAFP,aAAa,CAEL,QAAkB,EAAE;0BAF5B,aAAa;;AAGf,QAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;GAC1B;;eAJG,aAAa;;WAMJ,uBAAC,QAAgB,EAAU;AACtC,aAAO,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5C;;;WAEe,0BAAC,QAAgB,EAAU;AACzC,aAAO,QAAQ,CAAC,OAAO,CACrB,IAAI,CAAC,gBAAgB,EAAE,EACvB,IAAI,CAAC,iBAAiB,EAAE,CACzB,CAAC;KACH;;;WAEY,uBAAC,QAAgB,EAAW;AACvC,aAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/C;;;WAEe,0BAAC,QAAgB,EAAU;AACzC,aAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAE,CAAC,CAAC;KACtD;;;WAEgB,6BAAW;AAC1B,UAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAClC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EACnC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAC5B,CAAC;AACF,UAAI,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAChC,gBAAgB,EAChB,uBAAuB,CACxB,CAAC;AACF,UAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CACvB,mCAAmC,EACnC,kBAAkB,EAClB,gBAAgB,CACjB,CAAC;AACF,UAAI,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACzC,aAAO,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;;;WAEe,4BAAW;AACzB,UAAI,OAAO,GACT,MAAM,GACN,GAAG,GAAG,kBAAkB,CAAC,OAAO,CAAC,GACjC,YAAY,GACZ,GAAG,GAAG,kBAAkB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;AAC5C,aAAO,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAClC;;;SAlDG,aAAa;;;qBAqDJ,aAAa","file":"PodfileEditor.js","sourcesContent":["'use strict';\n\nrequire('instapromise');\n\nconst escapeStringRegexp = require('escape-string-regexp');\nconst path = require('path');\nconst util = require('util');\n\nconst PRELUDE = '# [REM]';\nconst POSTLUDE = '# [/REM]';\n\nclass PodfileEditor {\n\n  constructor(settings: Settings) {\n    this.settings = settings;\n  }\n\n  addREMSection(contents: string): string {\n    return contents + this._createREMSection();\n  }\n\n  updateREMSection(contents: string): string {\n    return contents.replace(\n      this._getSectionRegex(),\n      this._createREMSection()\n    );\n  }\n\n  hasREMSection(contents: string): boolean {\n    return this._getSectionRegex().test(contents);\n  }\n\n  removeREMSection(contents: string): string {\n    return contents.replace(this._getSectionRegex(), '');\n  }\n\n  _createREMSection(): string {\n    let relativeBasePath = path.relative(\n      this.settings.xcodeProjectDirectory,\n      this.settings.baseDirectory\n    );\n    let relativeScriptPath = path.join(\n      relativeBasePath,\n      'node_modules/.bin/rem'\n    );\n    let command = util.format(\n      'eval(`%s podfile-fragment -d %s`)',\n      relativeScriptPath,\n      relativeBasePath\n    );\n    let lines = [PRELUDE, command, POSTLUDE];\n    return '\\n' + lines.join('\\n');\n  }\n\n  _getSectionRegex(): RegExp {\n    let pattern =\n      '\\\\n?' +\n      '^' + escapeStringRegexp(PRELUDE) +\n      '[\\\\s\\\\S]*?' +\n      '^' + escapeStringRegexp(POSTLUDE) + '.*';\n    return new RegExp(pattern, 'gm');\n  }\n}\n\nexport default PodfileEditor;\n"],"sourceRoot":"/source/"}